@mixin box-shadow-2($args1, $args2) {
  -webkit-box-shadow: $args1, $args2;
  -moz-box-shadow: $args1, $args2;
  box-shadow: $args1, $args2;
}
@mixin box-shadow($arg) {
  -webkit-box-shadow: $arg;
  -moz-box-shadow: $arg;
  box-shadow: $arg;
}

@mixin card-variant($background, $color, $border) {
  background-color: $background;
  color: $color;
  .card-footer,
  .card-header {
    border-color: $border;
  }
  a {
    color: $color;
  }
}

// Button sizes
@mixin button-size(
  $padding-vertical,
  $padding-horizontal,
  $font-size,
  $line-height
) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  line-height: $line-height;
}

@mixin border-radius($args) {
  -webkit-border-radius: $args;
  -moz-border-radius: $args;
  -ms-border-radius: $args;
  -o-border-radius: $args;
  border-radius: $args;
}

@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

@mixin transitionPrefix($time, $properties...) {
  $transition: ();

  @each $property in $properties {
    $transition: append(
      $transition,
      ($property $time cubic-bezier(0.42, 0, 0.58, 1)),
      $separator: comma
    );
  }

  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

@function remove-nth($list, $index) {
  $result: null;

  @if type-of($index) != number {
    @warn "$index: #{quote($index)} is not a number for `remove-nth`.";
  } @else if $index == 0 {
    @warn "List index 0 must be a non-zero integer for `remove-nth`.";
  } @else if abs($index) > length($list) {
    @warn "List index is #{$index} but list is only #{length($list)} item long for `remove-nth`.";
  } @else {
    $result: ();
    $index: if($index < 0, length($list) + $index + 1, $index);

    @for $i from 1 through length($list) {
      @if $i != $index {
        $result: append($result, nth($list, $i));
      }
    }
  }

  @return $result;
}

// Title padding
@mixin title-pad() {
  padding-left: 1rem;
  padding-top: 0.7rem;
  padding-bottom: 0.7rem;
  margin-bottom: 2rem;
}

// /*opacity*/
@mixin opacity($opacity-value) {
  -khtml-opacity: $opacity-value;
  -moz-opacity: $opacity-value;
  opacity: $opacity-value;
  $opacity-ie: $opacity-value * 100;

  filter: alpha(opacity=$opacity-ie);
}

// /*opacity*/
@mixin grayscale($grayscale-value) {
  -webkit-filter: grayscale($grayscale-value);
  -moz-filter: grayscale($grayscale-value);
  filter: grayscale($grayscale-value);
}

// /*=========================== media query mixin=================*/
@mixin vp_range($min_px, $max_px) {
  @media (min-width: $min_px) and (max-width: $max_px) {
    @content;
  }
}

@mixin vp_max($pxSize) {
  @media (max-width: $pxSize) {
    @content;
  }
}

@mixin vp_min($pxSize) {
  @media (min-width: $pxSize) {
    @content;
  }
}

// generic transform
@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}
// rotate
@mixin rotate($deg) {
  @include transform(rotate(#{$deg}deg));
}
// scale
@mixin scale($scale) {
  @include transform(scale($scale));
}
// translate
@mixin translate($x, $y) {
  @include transform(translate($x, $y));
}
// skew
@mixin skew($x, $y) {
  @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin($origin) {
  -o-transform-origin: $origin;
  -ms-transform-origin: $origin;
  -webkit-transform-origin: $origin;
  transform-origin: $origin;
}

// /*=========================== media query mixin =================*/
//placeholder color
@mixin placeholder-color($color) {
  &::-webkit-input-placeholder {
    // /* WebKit browsers */
    color: $color;
  }
  &::-moz-placeholder {
    // /* Mozilla Firefox 19+ */
    color: $color;
  }
  &:-ms-input-placeholder {
    // /* Internet Explorer 10+ */
    color: $color;
  }
}

@mixin bi_gre($primary, $secondary) {
  background: $primary;
  background: -moz-linear-gradient(left, $primary 0%, $secondary 100%);
  background: -webkit-gradient(
    left top,
    right top,
    color-stop(0%, $secondary),
    color-stop(100%, $secondary)
  );
  background: -webkit-linear-gradient(left, $primary 0%, $secondary 100%);
  background: -o-linear-gradient(left, $primary 0%, $secondary 100%);
  background: -ms-linear-gradient(left, $primary 0%, $secondary 100%);
  background: linear-gradient(to right, $primary 0%, $secondary 100%);
}
